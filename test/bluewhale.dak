(import [:node:fs/promises [opendir]]
        [:node:path [join dirname]]
        [:node:url [fileURLToPath]]
        [:bun:test [test expect]]
        [:../src/transpiler.dak [transpileStr]])

(const root (-> import.meta.url fileURLToPath (join "../__data__/bluewhale")))

(fn sanitize-stack [stack]
  (and stack (-> stack (.replace (str (dirname root) "/") ""))))

(const AsyncFunction (. (fn@ []) :constructor))

(for@ [ent @(opendir root)]
  (test ent.name
    (fn@ []
      (let [out (try
                   @((-> (join root ent.name) Bun.file .text await
                         (transpileStr {:source ent.name :sourcemap :inline})
                         (. :code)
                         AsyncFunction))
                   (catch e `${e.message}\n\n--\n\n${(sanitize-stack e.stack)}`))]
        (-> out expect .toMatchSnapshot)))))
