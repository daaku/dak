(import [:bun:test [test expect]]
        [:../src/html.dak [html unsafe doc]])

(macro deftest [name data str]
  '(test ,name
     (fn []
      (-> (html ,data) expect (.toEqual ,str)))))

(deftest :plain-string
  "hello & world"
  "hello &amp; world")

(deftest :meta-charset
  [:meta {:charset :utf8}]
  "<meta charset=\"utf8\">")

(deftest :multiple-body-strings
  [:a "Hello" " " "World"]
  "<a>Hello World</a>")

(deftest :escape-attr
  [:a {:href "/?a=1&b=2"} "Go"]
  "<a href=\"/?a=1&amp;b=2\">Go</a>")

(deftest :escape-body
  [:a "&<>\"'"]
  "<a>&amp;&lt;&gt;&#34;&#39;</a>")

(deftest :tag-id-class
  [:a#foo.a.b {:class :c} "Hello"]
  "<a class=\"a b c\" id=\"foo\">Hello</a>")

(deftest :unsafe
  (unsafe "&boom" "<42>")
  "&boom<42>")

(deftest :when
  (when false "hello")
  "")

(test :doc
  (fn []
    (-> (doc {:lang :en} [:strong "hello & world"])
        expect
        (.toEqual "<!doctype html><html lang=\"en\"><strong>hello &amp; world</strong></html>\n"))))
