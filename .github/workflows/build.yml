name: Build
on: [push, pull_request]
jobs:
  build:
    name: node v${{ matrix.node-version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 19]
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: '**/package.json'
      - run: npm install -w packages/transpiler
      - run: npm install --foreground-scripts
      - name: Run Tests
        run: ./make.dak cover

  deploy:
    name: website
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: npm
          cache-dependency-path: '**/package.json'
      - run: npm install -w packages/transpiler
      - run: npm install --foreground-scripts
      - run: npm run -w packages/website build
      - name: install rclone
        run: |
          cd /tmp
          wget --quiet https://downloads.rclone.org/rclone-current-linux-amd64.deb
          sudo dpkg -i rclone-current-linux-amd64.deb
      - name: deploy
        run: rclone --config packages/website/.rclone.conf copyto packages/website/dist/ s3:www.daklang.com/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
