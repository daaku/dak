(prn "str:" (str "hello " "world"))
(prn "+:" (+ 1 2))
(prn "+ unary:" (+ "1"))
(prn "-:" (- 3 1))
(prn "- unary:" (- 4))
(prn "- multiple:" (- 1 2 3))
(prn "*: " (* 1 2))
(prn "/: " (/ 1 2))
(prn "**: " (** 2 2))
(prn "%: " (% 5 2))
(prn "<<: " (<< 1 2))
(prn ">>: " (>> 1 2))
(prn "bit-and" (bit-and 1 2))
(prn "bit-or" (bit-or 1 2))
(prn "bit-xor" (bit-xor 1 2))
(prn "||: " (|| 1 2))
(prn "or" (or 1 2))
(prn "&&: " (&& 1 2))
(prn "and" (and 1 2))
(prn "in" (in "a" {:a 42}))
(prn "bit-not" (bit-not 1))
(prn "not" (not 1))

(let a 1)
(prn "++:" (++ a))

; Comparisons
(prn "=: " (= 1 1))
(prn "not=" (not= 1 1))
(prn "==: " (== 1 1))
(prn "!=: " (!= 1 1))
(prn "<: " (< 1 2))
(prn ">: " (> 1 2))
(prn ">=: " (>= 1 2))
(prn "<=: " (<= 1 2))
